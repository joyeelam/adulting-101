{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoran\\\\react-flask-app\\\\web\\\\src\\\\containers\\\\SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button, Form, FormGroup, FormText, Input, FormFeedback, List } from \"reactstrap\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpForm = ({\n  setCurrentUser,\n  toggle\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [delay, setDelay] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n\n  const signUp = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://127.0.0.1:5000/users\",\n      data: {\n        username: username,\n        email: email,\n        password: password\n      }\n    }).then(resp => {\n      // console.log(resp.data)\n      localStorage.setItem(\"token\", resp.data.token);\n      toggle();\n      history.push(\"/home\");\n      setCurrentUser(true);\n    }).catch(error => {\n      console.error(error.response);\n    });\n  }; // username validation\n  // const checkUsername = (newUsername) => {\n  //   axios\n  //     .get(`http://127.0.0.1:5000/users/check_username/${newUsername}`)\n  //     .then((resp) => {\n  //       // console.log(resp.data)\n  //       if (resp.data.valid) {\n  //         setUsernameValid(true);\n  //       } else {\n  //         setUsernameValid(false);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error(error.response);\n  //     });\n  // };\n\n\n  const handleUsernameInput = e => {\n    clearTimeout(delay);\n    const newUsername = e.target.value;\n    setUsername(newUsername); // const newDelay = setTimeout(() => {\n    //   checkUsername(newUsername);\n    // }, 400);\n    // setDelay(newDelay);\n  };\n\n  const getUsernameInputProp = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (usernameValid) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getUsernameFormFeedback = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (usernameValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Username is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Username already exists, try something else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n  }; // email validation\n\n\n  const checkEmail = newEmail => {\n    if (emailRegex.test(newEmail)) {\n      axios.get(`http://127.0.0.1:5000/users/check_email/${newEmail}`).then(resp => {\n        // console.log(resp.data)\n        if (resp.data.valid) {\n          setEmailValid(true);\n        } else {\n          setEmailValid(false);\n        }\n      }).catch(error => {\n        console.error(error.response);\n      });\n    }\n  };\n\n  const handleEmailInput = e => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n    const newDelay = setTimeout(() => {\n      checkEmail(newEmail);\n    }, 400);\n    setDelay(newDelay);\n  };\n\n  const getEmailInputProp = () => {\n    if (!email.length) {\n      return null;\n    }\n\n    if (emailValid) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getEmailFormFeedback = () => {\n    if (!email.length) {\n      return null;\n    }\n\n    if (emailValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Email address looks good!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, this);\n    }\n  }; // password validation\n\n\n  const handlePasswordInput = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    if (passwordRegex.test(newPassword)) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  };\n\n  const getPasswordInputProp = () => {\n    if (!password.length) {\n      return null;\n    }\n\n    if (password.length < 6) {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getPasswordFormFeedback = () => {\n    if (!password.length) {\n      return null;\n    }\n\n    if (passwordValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Password looks secure!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should be at least 6 characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should have both uppercase and lowercase characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should have at least one special character.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this);\n    }\n  }; // confirm password validation\n\n\n  const getConfirmPasswordInputProp = () => {\n    if (!confirmPassword) {\n      return null;\n    }\n\n    if (password === confirmPassword) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getConfirmPasswordFeedback = () => {\n    if (!confirmPassword.length) {\n      return null;\n    }\n\n    if (password === confirmPassword) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Good to go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (password !== confirmPassword) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Oops, passwords don't match. Try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      autoplay: true,\n      loop: true,\n      src: \"https://assets4.lottiefiles.com/packages/lf20_2qmtqq0y.json\",\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Enter a username between 6 and 20 characters\",\n          value: username,\n          onChange: handleUsernameInput // {...getUsernameInputProp()}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), getUsernameFormFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailInput // {...getEmailInputProp()}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), getEmailFormFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Minimum 6 characters\",\n          value: password,\n          onChange: handlePasswordInput,\n          ...getPasswordInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), getPasswordFormFeedback(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Retype password to confirm\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          },\n          ...getConfirmPasswordInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), getConfirmPasswordFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          disabled: true,\n          children: \"Sign up with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"link\",\n          children: \"Login here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: signUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      onClick: toggle,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"MJ3+MPdte4R0JzVU/3/gcJhpSBo=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["C:/Users/Zoran/react-flask-app/web/src/containers/SignUpForm.js"],"names":["useState","useHistory","axios","Button","Form","FormGroup","FormText","Input","FormFeedback","List","Player","SignUpForm","setCurrentUser","toggle","history","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","delay","setDelay","usernameValid","setUsernameValid","emailValid","setEmailValid","passwordValid","setPasswordValid","emailRegex","passwordRegex","signUp","method","url","data","then","resp","localStorage","setItem","token","push","catch","error","console","response","handleUsernameInput","e","clearTimeout","newUsername","target","value","getUsernameInputProp","length","valid","invalid","getUsernameFormFeedback","checkEmail","newEmail","test","get","handleEmailInput","newDelay","setTimeout","getEmailInputProp","getEmailFormFeedback","handlePasswordInput","newPassword","getPasswordInputProp","getPasswordFormFeedback","getConfirmPasswordInputProp","getConfirmPasswordFeedback","height","width"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Input,\n  FormFeedback,\n  List,\n} from \"reactstrap\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\n\nconst SignUpForm = ({ setCurrentUser, toggle }) => {\n  const history = useHistory();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [delay, setDelay] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\n  const passwordRegex =\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n\n  const signUp = () => {\n    axios({\n      method: \"POST\",\n      url: \"http://127.0.0.1:5000/users\",\n      data: {\n        username: username,\n        email: email,\n        password: password,\n      },\n    })\n      .then((resp) => {\n        // console.log(resp.data)\n        localStorage.setItem(\"token\", resp.data.token);\n        toggle();\n        history.push(\"/home\");\n        setCurrentUser(true);\n      })\n      .catch((error) => {\n        console.error(error.response);\n      });\n  };\n\n  // username validation\n\n  // const checkUsername = (newUsername) => {\n  //   axios\n  //     .get(`http://127.0.0.1:5000/users/check_username/${newUsername}`)\n  //     .then((resp) => {\n  //       // console.log(resp.data)\n  //       if (resp.data.valid) {\n  //         setUsernameValid(true);\n  //       } else {\n  //         setUsernameValid(false);\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       console.error(error.response);\n  //     });\n  // };\n\n  const handleUsernameInput = (e) => {\n    clearTimeout(delay);\n    const newUsername = e.target.value;\n    setUsername(newUsername);\n    // const newDelay = setTimeout(() => {\n    //   checkUsername(newUsername);\n    // }, 400);\n    // setDelay(newDelay);\n  };\n\n  const getUsernameInputProp = () => {\n    if (!username.length) {\n      return null;\n    }\n    if (usernameValid) {\n      return { valid: true };\n    } else {\n      return { invalid: true };\n    }\n  };\n\n  const getUsernameFormFeedback = () => {\n    if (!username.length) {\n      return null;\n    }\n    if (usernameValid) {\n      return <FormFeedback valid>Username is available</FormFeedback>;\n    } else {\n      return (\n        <FormFeedback invalid>\n          Username already exists, try something else\n        </FormFeedback>\n      );\n    }\n  };\n\n  // email validation\n\n  const checkEmail = (newEmail) => {\n    if (emailRegex.test(newEmail)) {\n      axios\n        .get(`http://127.0.0.1:5000/users/check_email/${newEmail}`)\n        .then((resp) => {\n          // console.log(resp.data)\n          if (resp.data.valid) {\n            setEmailValid(true);\n          } else {\n            setEmailValid(false);\n          }\n        })\n        .catch((error) => {\n          console.error(error.response);\n        });\n    }\n  };\n\n  const handleEmailInput = (e) => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n    const newDelay = setTimeout(() => {\n      checkEmail(newEmail);\n    }, 400);\n    setDelay(newDelay);\n  };\n\n  const getEmailInputProp = () => {\n    if (!email.length) {\n      return null;\n    }\n    if (emailValid) {\n      return { valid: true };\n    } else {\n      return { invalid: true };\n    }\n  };\n\n  const getEmailFormFeedback = () => {\n    if (!email.length) {\n      return null;\n    }\n    if (emailValid) {\n      return <FormFeedback valid>Email address looks good!</FormFeedback>;\n    } else {\n      return <FormFeedback invalid>Please enter a valid email</FormFeedback>;\n    }\n  };\n\n  // password validation\n\n  const handlePasswordInput = (e) => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    if (passwordRegex.test(newPassword)) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  };\n\n  const getPasswordInputProp = () => {\n    if (!password.length) {\n      return null;\n    }\n    if (password.length < 6) {\n      return { invalid: true };\n    }\n  };\n\n  const getPasswordFormFeedback = () => {\n    if (!password.length) {\n      return null;\n    }\n    if (passwordValid) {\n      return <FormFeedback valid>Password looks secure!</FormFeedback>;\n    } else {\n      return (\n        <FormFeedback invalid>\n          <List>\n            <ul>\n              <li>Password should be at least 6 characters.</li>\n              <li>\n                Password should have both uppercase and lowercase characters.\n              </li>\n              <li>Password should have at least one special character.</li>\n            </ul>\n          </List>\n        </FormFeedback>\n      );\n    }\n  };\n\n  // confirm password validation\n\n  const getConfirmPasswordInputProp = () => {\n    if (!confirmPassword) {\n      return null;\n    }\n    if (password === confirmPassword) {\n      return { valid: true };\n    } else {\n      return { invalid: true };\n    }\n  };\n\n  const getConfirmPasswordFeedback = () => {\n    if (!confirmPassword.length) {\n      return null;\n    }\n    if (password === confirmPassword) {\n      return <FormFeedback valid>Good to go!</FormFeedback>;\n    }\n    if (password !== confirmPassword) {\n      return (\n        <FormFeedback invalid>\n          Oops, passwords don't match. Try again.\n        </FormFeedback>\n      );\n    }\n  };\n\n  return (\n    <div>\n      <h4>Sign Up</h4>\n      <Player\n        autoplay\n        loop\n        src=\"https://assets4.lottiefiles.com/packages/lf20_2qmtqq0y.json\"\n        style={{ height: \"300px\", width: \"300px\" }}\n      ></Player>\n      <hr />\n      <Form className=\"form\">\n        <FormGroup>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter a username between 6 and 20 characters\"\n            value={username}\n            onChange={handleUsernameInput}\n            // {...getUsernameInputProp()}\n          />\n          {getUsernameFormFeedback()}\n        </FormGroup>\n        <br />\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={handleEmailInput}\n            // {...getEmailInputProp()}\n          />\n          {getEmailFormFeedback()}\n        </FormGroup>\n        <br />\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Minimum 6 characters\"\n            value={password}\n            onChange={handlePasswordInput}\n            {...getPasswordInputProp()}\n          />\n          {getPasswordFormFeedback()}\n          <br />\n          <Input\n            type=\"password\"\n            placeholder=\"Retype password to confirm\"\n            value={confirmPassword}\n            onChange={(e) => {\n              setConfirmPassword(e.target.value);\n            }}\n            {...getConfirmPasswordInputProp()}\n          />\n          {getConfirmPasswordFeedback()}\n        </FormGroup>\n        <hr />\n        <FormGroup>\n          <Button color=\"success\" disabled>\n            Sign up with Google\n          </Button>\n        </FormGroup>\n        <FormText>\n          Already a member? <Button color=\"link\">Login here.</Button>\n        </FormText>\n      </Form>\n      <Button color=\"primary\" onClick={signUp}>\n        Sign Up\n      </Button>{\" \"}\n      <Button color=\"secondary\" onClick={toggle}>\n        Cancel\n      </Button>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n"]},"metadata":{},"sourceType":"module"}