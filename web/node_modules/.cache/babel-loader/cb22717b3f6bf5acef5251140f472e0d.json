{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Quiz() {\n  _s();\n\n  const [questions, SetQuestions] = useState({\n    results: {}\n  });\n  const [answer, setAnswer] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  function APICall() {\n    axios.get(\"https://opentdb.com/api.php?amount=1&type=boolean\").then(function (response) {\n      SetQuestions(response.data.results[0]);\n      console.log(response.data.results[0]);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    APICall();\n  }, []);\n\n  const answerChoice = choice => {\n    setAnswer(choice);\n\n    if (answer === questions.correct_answer) {\n      console.log(\"correct\");\n      setModalOpen(true);\n    } else {\n      console.log(\"wrong\");\n      setModalOpen(true);\n      APICall();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isModalOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n      whatAnswer: answer,\n      ClickFunction: () => setModalOpen(!isModalOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questionArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"categoryTag\",\n          children: questions.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"questionAnimation\",\n          children: questions.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answerArea\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"answserButton\",\n          onClick: () => answerChoice(\"True\"),\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"answserButton\",\n          onClick: () => answerChoice(\"False\"),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Quiz, \"gGvM/gDbOGnaYo3pdMveGBIqihM=\");\n\n_c = Quiz;\n\nfunction Modal(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalOverlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.whatAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: props.ClickFunction,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = Modal;\nexport default Quiz;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Quiz\");\n$RefreshReg$(_c2, \"Modal\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/Quiz.js"],"names":["useState","useEffect","axios","Quiz","questions","SetQuestions","results","answer","setAnswer","isModalOpen","setModalOpen","APICall","get","then","response","data","console","log","catch","error","answerChoice","choice","correct_answer","category","question","Modal","props","whatAnswer","ClickFunction"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Quiz() {\n  const [questions, SetQuestions] = useState({ results: {} });\n  const [answer, setAnswer] = useState(null);\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  function APICall() {\n    axios\n      .get(\"https://opentdb.com/api.php?amount=1&type=boolean\")\n      .then(function(response) {\n        SetQuestions(response.data.results[0]);\n        console.log(response.data.results[0]);\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  }\n\n  useEffect(() => {\n    APICall();\n  }, []);\n\n  const answerChoice = choice => {\n    setAnswer(choice);\n\n    if (answer === questions.correct_answer) {\n      console.log(\"correct\");\n      setModalOpen(true);\n    } else {\n      console.log(\"wrong\");\n      setModalOpen(true);\n      APICall();\n    }\n  };\n\n  return (\n    <>\n      {isModalOpen ? (\n        <Modal\n          whatAnswer={answer}\n          ClickFunction={() => setModalOpen(!isModalOpen)}\n        />\n      ) : (\n        <div />\n      )}\n\n      <div className=\"appContainer\">\n        <h1>Trivia</h1>\n        <div className=\"questionArea\">\n          <span className=\"categoryTag\">{questions.category}</span>\n          <h2 className=\"questionAnimation\">{questions.question}</h2>\n        </div>\n        <div className=\"answerArea\">\n          <span className=\"answserButton\" onClick={() => answerChoice(\"True\")}>\n            Yes\n          </span>\n          <span className=\"answserButton\" onClick={() => answerChoice(\"False\")}>\n            No\n          </span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction Modal(props) {\n  return (\n    <div className=\"modalOverlay\">\n      <div className=\"modalContainer\">\n        <h1>{props.whatAnswer}</h1>\n        <span onClick={props.ClickFunction}>close</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}