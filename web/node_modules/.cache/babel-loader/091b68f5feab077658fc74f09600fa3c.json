{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/components/quiz/AnswerOptions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnswerOption = props => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"answerOption\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      className: \"radioCustomButton\",\n      checked: props.answerType === props.answer,\n      id: props.answerType,\n      value: props.answerType,\n      disabled: props.answer,\n      onChange: props.onAnswerSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"radioCustomLabel\",\n      htmlFor: props.answerType,\n      children: props.answerContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AnswerOption;\nexport default AnswerOption;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnswerOption\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/components/quiz/AnswerOptions.js"],"names":["AnswerOption","props","answerType","answer","onAnswerSelected","answerContent"],"mappings":";;;AAAA,MAAMA,YAAY,GAAIC,KAAD,IAAW;AAC9B,sBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,4BACE;AACE,MAAA,IAAI,EAAG,OADT;AAEE,MAAA,SAAS,EAAG,mBAFd;AAGE,MAAA,OAAO,EAAIA,KAAK,CAACC,UAAN,KAAqBD,KAAK,CAACE,MAHxC;AAIE,MAAA,EAAE,EAAIF,KAAK,CAACC,UAJd;AAKE,MAAA,KAAK,EAAID,KAAK,CAACC,UALjB;AAME,MAAA,QAAQ,EAAID,KAAK,CAACE,MANpB;AAOE,MAAA,QAAQ,EAAIF,KAAK,CAACG;AAPpB;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AACE,MAAA,SAAS,EAAG,kBADd;AAEE,MAAA,OAAO,EAAIH,KAAK,CAACC,UAFnB;AAAA,gBAIGD,KAAK,CAACI;AAJT;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;KAAML,Y;AAsBN,eAAeA,YAAf","sourcesContent":["const AnswerOption = (props) => {\n  return (\n    <li className='answerOption'>\n      <input\n        type = 'radio'\n        className = 'radioCustomButton'\n        checked = {props.answerType === props.answer}\n        id = {props.answerType}\n        value = {props.answerType}\n        disabled = {props.answer}\n        onChange = {props.onAnswerSelected}\n      />\n      <label\n        className = 'radioCustomLabel'\n        htmlFor = {props.answerType}\n      >\n        {props.answerContent}\n      </label>\n    </li>\n  )\n}\n\nexport default AnswerOption\n"]},"metadata":{},"sourceType":"module"}