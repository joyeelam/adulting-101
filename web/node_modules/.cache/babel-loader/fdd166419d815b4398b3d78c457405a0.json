{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/pages/Quiz.js\";\nimport PropTypes from 'prop-types';\nimport Question from '../components/quiz/Question';\nimport QuestionCount from '../components/quiz/QuestionCount';\nimport AnswerOption from '../components/quiz/AnswerOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      content: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answerOptions\",\n      children: props.answerOptions.map(renderAnswerOptions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Quiz;\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/pages/Quiz.js"],"names":["PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","questionId","questionTotal","question","answerOptions","map","renderAnswerOptions","propTypes","answer","string","isRequired","array","counter","number","onAnswerSelected","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,OAAO,EAAIA,KAAK,CAACC,UADnB;AAEE,MAAA,KAAK,EAAID,KAAK,CAACE;AAFjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AAAU,MAAA,OAAO,EAAIF,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAI,MAAA,SAAS,EAAG,eAAhB;AAAA,gBACGH,KAAK,CAACI,aAAN,CAAoBC,GAApB,CAAwBC,mBAAxB;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;KAAMP,I;AAgBNA,IAAI,CAACQ,SAAL,GAAiB;AACfC,EAAAA,MAAM,EAAEb,SAAS,CAACc,MAAV,CAAiBC,UADV;AAEfN,EAAAA,aAAa,EAAET,SAAS,CAACgB,KAAV,CAAgBD,UAFhB;AAGfE,EAAAA,OAAO,EAAEjB,SAAS,CAACkB,MAAV,CAAiBH,UAHX;AAIfP,EAAAA,QAAQ,EAAER,SAAS,CAACc,MAAV,CAAiBC,UAJZ;AAKfT,EAAAA,UAAU,EAAEN,SAAS,CAACkB,MAAV,CAAiBH,UALd;AAMfR,EAAAA,aAAa,EAAEP,SAAS,CAACkB,MAAV,CAAiBH,UANjB;AAOfI,EAAAA,gBAAgB,EAAEnB,SAAS,CAACoB,IAAV,CAAeL;AAPlB,CAAjB;AAUA,eAAeX,IAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport Question from '../components/quiz/Question'\nimport QuestionCount from '../components/quiz/QuestionCount'\nimport AnswerOption from '../components/quiz/AnswerOptions'\n\nconst Quiz = (props) => {\n  return (\n    <div className = 'quiz'>\n      <h1>Quiz</h1>\n      <QuestionCount\n        counter = {props.questionId}\n        total = {props.questionTotal}\n      />\n      <Question content = {props.question}/>\n      <ul className = 'answerOptions'>\n        {props.answerOptions.map(renderAnswerOptions)}\n      </ul>\n    </div>\n  )\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}