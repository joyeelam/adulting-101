{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/Quiz.js\",\n    _s2 = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [questions, setQuestions] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [qInd, setQInd] = useState(0);\n\n  const fetchQuestion = async () => {\n    _s();\n\n    let response = await fetch('https://opentdb.com/api.php?amount=5&category=9&difficulty=medium&type=multiple');\n    console.log(response);\n    let resp = await response.json();\n    console.log(resp.results);\n    insertCorr(resp.results[0].incorrect_answers, resp.results[0].correct_answer);\n    useApiData(resp);\n  };\n\n  _s(fetchQuestion, \"6OAewlcTGBub04fPxLpyhyvBpto=\", false, function () {\n    return [useApiData];\n  });\n\n  const insertCorr = (arr, corr) => {\n    const randInd = Math.floor(Math.random() * 4);\n    arr.splice(randInd, 0, corr);\n  };\n\n  const useApiData = data => {\n    document.getElementById('question').innerHTML = data.results[0].question;\n\n    for (let i = 0; i < data.results[0].incorrect_answers.length; i++) {\n      let choicesContainer = document.getElementById('choices_container');\n      let button = document.createElement('button');\n      button.innerHTML = data.results[0].incorrect_answers[i];\n      choicesContainer.appendChild(button);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quiz\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Quiz, \"JqSexh343i+tS7KKPI0l1zxH7ZY=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/Quiz.js"],"names":["useState","useEffect","Quiz","questions","setQuestions","loaded","setLoaded","qInd","setQInd","fetchQuestion","response","fetch","console","log","resp","json","results","insertCorr","incorrect_answers","correct_answer","useApiData","arr","corr","randInd","Math","floor","random","splice","data","document","getElementById","innerHTML","question","i","length","choicesContainer","button","createElement","appendChild"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AAEjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;;AAEA,QAAMS,aAAa,GAAG,YAAY;AAAA;;AAChC,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iFAAD,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAII,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACE,OAAjB;AACAC,IAAAA,UAAU,CAACH,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBE,iBAAjB,EAAoCJ,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBG,cAApD,CAAV;AACAC,IAAAA,UAAU,CAACN,IAAD,CAAV;AACD,GAPD;;AANiB,KAMXL,aANW;AAAA,YAYfW,UAZe;AAAA;;AAejB,QAAMH,UAAU,GAAG,CAACI,GAAD,EAAMC,IAAN,KAAe;AAChC,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAhB;AACAL,IAAAA,GAAG,CAACM,MAAJ,CAAWJ,OAAX,EAAoB,CAApB,EAAuBD,IAAvB;AACD,GAHD;;AAKA,QAAMF,UAAU,GAAIQ,IAAD,IAAU;AAC3BC,IAAAA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgDH,IAAI,CAACZ,OAAL,CAAa,CAAb,EAAgBgB,QAAhE;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACZ,OAAL,CAAa,CAAb,EAAgBE,iBAAhB,CAAkCgB,MAAtD,EAA8DD,CAAC,EAA/D,EAAmE;AACjE,UAAIE,gBAAgB,GAAGN,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAAvB;AACA,UAAIM,MAAM,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,QAAvB,CAAb;AACAD,MAAAA,MAAM,CAACL,SAAP,GAAmBH,IAAI,CAACZ,OAAL,CAAa,CAAb,EAAgBE,iBAAhB,CAAkCe,CAAlC,CAAnB;AACAE,MAAAA,gBAAgB,CAACG,WAAjB,CAA6BF,MAA7B;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;IAAMlC,I;;KAAAA,I;AAqCN,eAAeA,IAAf","sourcesContent":["import {useState, useEffect} from 'react'\n\nconst Quiz = () => {\n\n  const [questions, setQuestions] = useState([])\n  const [loaded, setLoaded] = useState(false)\n  const [qInd, setQInd] = useState(0)\n\n  const fetchQuestion = async () => {\n    let response = await fetch('https://opentdb.com/api.php?amount=5&category=9&difficulty=medium&type=multiple')\n    console.log(response)\n    let resp = await response.json()\n    console.log(resp.results)\n    insertCorr(resp.results[0].incorrect_answers, resp.results[0].correct_answer)\n    useApiData(resp)\n  }\n\n  const insertCorr = (arr, corr) => {\n    const randInd = Math.floor(Math.random() * 4)\n    arr.splice(randInd, 0, corr)\n  }\n\n  const useApiData = (data) => {\n    document.getElementById('question').innerHTML = data.results[0].question\n    for (let i = 0; i < data.results[0].incorrect_answers.length; i++) {\n      let choicesContainer = document.getElementById('choices_container')\n      let button = document.createElement('button')\n      button.innerHTML = data.results[0].incorrect_answers[i]\n      choicesContainer.appendChild(button)\n    }\n  }\n\n  return (\n    <div className = 'Quiz'>\n      <h1>Hello</h1>\n    </div>\n  )\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}