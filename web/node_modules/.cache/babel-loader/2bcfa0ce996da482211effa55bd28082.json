{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/components/quiz/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState(null);\n  const [questionCategory, setQuestionCategory] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://opentdb.com/api_category.php').then(resp => resp.json()).then(data => {\n      setLoading(false);\n      setOptions(data.trivia_categories);\n    });\n  }, [setOptions]);\n\n  const handleCategoryChange = event => {\n    setQuestionCategory(event.target.value);\n  };\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: questionCategory,\n        onChange: handleCategoryChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), options && options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.id,\n          children: option.name\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Settings, \"pzaZe1xyqTPZMqdsuPUw54iPe2g=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/components/quiz/Settings.js"],"names":["useEffect","useState","Settings","loading","setLoading","options","setOptions","questionCategory","setQuestionCategory","fetch","then","resp","json","data","trivia_categories","handleCategoryChange","event","target","value","map","option","id","name"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACCC,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAACO,IAAI,CAACC,iBAAN,CAAV;AACD,KALD;AAMD,GARQ,EAQN,CAACR,UAAD,CARM,CAAT;;AAUA,QAAMS,oBAAoB,GAAIC,KAAD,IAAW;AACtCR,IAAAA,mBAAmB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,MAAI,CAACf,OAAL,EAAc;AACZ,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,KAAK,EAAEI,gBAAf;AAAiC,QAAA,QAAQ,EAAEQ,oBAA3C;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGV,OAAO,IACNA,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACV;AAAQ,UAAA,KAAK,EAAEA,MAAM,CAACC,EAAtB;AAAA,oBACGD,MAAM,CAACE;AADV,WAA+BF,MAAM,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA,gBADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,CAxCD;;GAAMnB,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import {useEffect, useState} from 'react'\n\nconst Settings = () => {\n\n  const [loading, setLoading] = useState(false)\n  const [options, setOptions] = useState(null)\n  const [questionCategory, setQuestionCategory] = useState(\"\")\n\n  useEffect(()=>{\n    setLoading(true)\n    fetch('https://opentdb.com/api_category.php')\n    .then((resp) => resp.json())\n    .then((data) => {\n      setLoading(false)\n      setOptions(data.trivia_categories)\n    })\n  }, [setOptions])\n\n  const handleCategoryChange = (event) => {\n    setQuestionCategory(event.target.value)\n  }\n\n  if (!loading) {\n    return (\n      <div>\n        <h2>Select Category:</h2>\n        <select value={questionCategory} onChange={handleCategoryChange}>\n          <option>All</option>\n          {options &&\n            options.map((option) => (\n              <option value={option.id} key={option.id}>\n                {option.name}\n              </option>\n            ))}\n        </select>\n      </div>\n    )\n  } else {\n    return (\n      <p>Loading...</p>\n    )\n  }\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}