{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ariev\\\\react-flask-app\\\\web\\\\src\\\\containers\\\\quiz\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FetchButton from './FetchButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [options, setOptions] = useState(null);\n  const loading = useSelector(state => state.options.loading);\n  const questionCategory = useSelector(state => state.options.question_category);\n  const questionDifficulty = useSelector(state => state.options.question_difficulty);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const handleLoadingChange = value => {\n      dispatch({\n        type: 'CHANGE_LOADING',\n        loading: value\n      });\n    };\n\n    handleLoadingChange(true);\n    fetch('https://opentdb.com/api_category.php').then(resp => resp.json()).then(data => {\n      // console.log(data.trivia_categories)\n      handleLoadingChange(false);\n      setOptions(data.trivia_categories);\n    });\n  }, [setOptions, dispatch]);\n\n  const handleCategoryChange = event => {\n    dispatch({\n      type: 'CHANGE_CATEGORY',\n      value: event.target.value\n    });\n  };\n\n  const handleDifficultyChange = event => {\n    dispatch({\n      type: 'CHANGE_DIFFICULTY',\n      value: event.target.value\n    });\n  };\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionCategory,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), options && options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionDifficulty,\n          onChange: handleDifficultyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, \"difficulty-0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, \"difficulty-1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, \"difficulty-2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, \"difficulty-3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FetchButton, {\n          text: \"Get Started!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Settings, \"9jnTQBP1oqM/xDkybuXlqB4/aOs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/ariev/react-flask-app/web/src/containers/quiz/Settings.js"],"names":["useEffect","useState","useSelector","useDispatch","FetchButton","Settings","options","setOptions","loading","state","questionCategory","question_category","questionDifficulty","question_difficulty","dispatch","handleLoadingChange","value","type","fetch","then","resp","json","data","trivia_categories","handleCategoryChange","event","target","handleDifficultyChange","map","option","id","name"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n\r\nimport FetchButton from './FetchButton'\r\n\r\nconst Settings = () => {\r\n\r\n  const [options, setOptions] = useState(null)\r\n\r\n  const loading = useSelector(state => state.options.loading)\r\n  const questionCategory = useSelector(state => state.options.question_category)\r\n  const questionDifficulty = useSelector(state => state.options.question_difficulty)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(()=>{\r\n\r\n    const handleLoadingChange = value => {\r\n      dispatch({\r\n        type: 'CHANGE_LOADING',\r\n        loading: value\r\n      })\r\n    }\r\n\r\n    handleLoadingChange(true)\r\n    fetch('https://opentdb.com/api_category.php')\r\n    .then((resp) => resp.json())\r\n    .then((data) => {\r\n      // console.log(data.trivia_categories)\r\n      handleLoadingChange(false)\r\n      setOptions(data.trivia_categories)\r\n    })\r\n  }, [setOptions, dispatch])\r\n\r\n  const handleCategoryChange = event => {\r\n    dispatch({\r\n      type: 'CHANGE_CATEGORY',\r\n      value: event.target.value\r\n    })\r\n  }\r\n\r\n  const handleDifficultyChange = event => {\r\n    dispatch({\r\n      type: 'CHANGE_DIFFICULTY',\r\n      value: event.target.value\r\n    })\r\n  }\r\n\r\n  if (!loading) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h2>Select Category:</h2>\r\n          <select value={questionCategory} onChange={handleCategoryChange}>\r\n            <option>All</option>\r\n            {options &&\r\n              options.map((option) => (\r\n                <option value={option.id} key={option.id}>\r\n                  {option.name}\r\n                </option>\r\n              ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <h2>Select Difficulty:</h2>\r\n          <select value={questionDifficulty} onChange={handleDifficultyChange}>\r\n            <option value=\"\" key=\"difficulty-0\">All</option>\r\n            <option value=\"easy\" key=\"difficulty-1\">Easy</option>\r\n            <option value=\"medium\" key=\"difficulty-2\">Medium</option>\r\n            <option value=\"hard\" key=\"difficulty-3\">Hard</option>\r\n          </select>\r\n          <FetchButton text='Get Started!'/>\r\n        </div>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <p>Loading...</p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Settings\r\n"]},"metadata":{},"sourceType":"module"}