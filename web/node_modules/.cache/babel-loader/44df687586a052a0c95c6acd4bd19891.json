{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/pages/Quiz.js\";\nimport PropTypes from 'prop-types';\nimport Question from '../components/quiz/Question';\nimport QuestionCount from '../components/quiz/QuestionCount';\nimport AnswerOption from '../components/quiz/AnswerOptions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = props => {\n  const renderAnswerOptions = key => {\n    return /*#__PURE__*/_jsxDEV(AnswerOption, {\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected\n    }, key.content, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      content: props.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"answerOptions\",\n      children: props.answerOptions.map(renderAnswerOptions)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Quiz;\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/pages/Quiz.js"],"names":["PropTypes","Question","QuestionCount","AnswerOption","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","counter","number","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtB,QAAMC,mBAAmB,GAAIC,GAAD,IAAS;AACnC,wBACE,QAAC,YAAD;AAEE,MAAA,aAAa,EAAIA,GAAG,CAACC,OAFvB;AAGE,MAAA,UAAU,EAAID,GAAG,CAACE,IAHpB;AAIE,MAAA,MAAM,EAAIJ,KAAK,CAACK,MAJlB;AAKE,MAAA,UAAU,EAAIL,KAAK,CAACM,UALtB;AAME,MAAA,gBAAgB,EAAIN,KAAK,CAACO;AAN5B,OACSL,GAAG,CAACC,OADb;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AACE,MAAA,OAAO,EAAIH,KAAK,CAACM,UADnB;AAEE,MAAA,KAAK,EAAIN,KAAK,CAACQ;AAFjB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,QAAD;AAAU,MAAA,OAAO,EAAIR,KAAK,CAACS;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAI,MAAA,SAAS,EAAG,eAAhB;AAAA,gBACGT,KAAK,CAACU,aAAN,CAAoBC,GAApB,CAAwBV,mBAAxB;AADH;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;KAAMF,I;AA8BNA,IAAI,CAACa,SAAL,GAAiB;AACfP,EAAAA,MAAM,EAAEV,SAAS,CAACkB,MAAV,CAAiBC,UADV;AAEfJ,EAAAA,aAAa,EAAEf,SAAS,CAACoB,KAAV,CAAgBD,UAFhB;AAGfE,EAAAA,OAAO,EAAErB,SAAS,CAACsB,MAAV,CAAiBH,UAHX;AAIfL,EAAAA,QAAQ,EAAEd,SAAS,CAACkB,MAAV,CAAiBC,UAJZ;AAKfR,EAAAA,UAAU,EAAEX,SAAS,CAACsB,MAAV,CAAiBH,UALd;AAMfN,EAAAA,aAAa,EAAEb,SAAS,CAACsB,MAAV,CAAiBH,UANjB;AAOfP,EAAAA,gBAAgB,EAAEZ,SAAS,CAACuB,IAAV,CAAeJ;AAPlB,CAAjB;AAUA,eAAef,IAAf","sourcesContent":["import PropTypes from 'prop-types'\nimport Question from '../components/quiz/Question'\nimport QuestionCount from '../components/quiz/QuestionCount'\nimport AnswerOption from '../components/quiz/AnswerOptions'\n\nconst Quiz = (props) => {\n\n  const renderAnswerOptions = (key) => {\n    return (\n      <AnswerOption\n        key = {key.content}\n        answerContent = {key.content}\n        answerType = {key.type}\n        answer = {props.answer}\n        questionId = {props.questionId}\n        onAnswerSelected = {props.onAnswerSelected}\n      />\n    )\n  }\n\n  return (\n    <div className = 'quiz'>\n      <h1>Quiz</h1>\n      <QuestionCount\n        counter = {props.questionId}\n        total = {props.questionTotal}\n      />\n      <Question content = {props.question}/>\n      <ul className = 'answerOptions'>\n        {props.answerOptions.map(renderAnswerOptions)}\n      </ul>\n    </div>\n  )\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  counter: PropTypes.number.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n}\n\nexport default Quiz\n"]},"metadata":{},"sourceType":"module"}