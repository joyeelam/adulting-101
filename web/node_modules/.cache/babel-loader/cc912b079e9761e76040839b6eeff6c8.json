{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, FormText, Input, FormFeedback, List } from \"reactstrap\";\nimport { Player } from '@lottiefiles/react-lottie-player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpForm = ({\n  setCurrentUser,\n  toggle\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [delay, setDelay] = useState(null);\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [emailValid, setEmailValid] = useState(false);\n  const [passwordValid, setPasswordValid] = useState(false);\n  const emailRegex = /\\S+@\\S+\\.\\S+/;\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n\n  const signUp = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/users/',\n      data: {\n        username: username,\n        email: email,\n        password: password\n      }\n    }).then(resp => {\n      // console.log(resp.data)\n      localStorage.setItem('token', resp.data.token);\n      toggle();\n      history.push('/home');\n      setCurrentUser(true);\n    }).catch(error => {\n      console.log(error);\n      console.error(error.response);\n    });\n  }; // username validation\n\n\n  const checkUsername = newUsername => {\n    axios.get(`http://localhost:5000/users/check_username/${newUsername}`).then(resp => {\n      // console.log(resp.data)\n      if (resp.data.valid) {\n        setUsernameValid(true);\n      } else {\n        setUsernameValid(false);\n      }\n    }).catch(error => {\n      console.error(error.response);\n    });\n  };\n\n  const handleUsernameInput = e => {\n    clearTimeout(delay);\n    const newUsername = e.target.value;\n    setUsername(newUsername);\n    const newDelay = setTimeout(() => {\n      checkUsername(newUsername);\n    }, 400);\n    setDelay(newDelay);\n  };\n\n  const getUsernameInputProp = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (usernameValid) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getUsernameFormFeedback = () => {\n    if (!username.length) {\n      return null;\n    }\n\n    if (usernameValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Username is available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Username already exists, try something else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }, this);\n    }\n  }; // email validation\n\n\n  const checkEmail = newEmail => {\n    if (emailRegex.test(newEmail)) {\n      axios.get(`http://localhost:5000/users/check_email/${newEmail}`).then(resp => {\n        // console.log(resp.data)\n        if (resp.data.valid) {\n          setEmailValid(true);\n        } else {\n          setEmailValid(false);\n        }\n      }).catch(error => {\n        console.error(error.response);\n      });\n    }\n  };\n\n  const handleEmailInput = e => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n    const newDelay = setTimeout(() => {\n      checkEmail(newEmail);\n    }, 400);\n    setDelay(newDelay);\n  };\n\n  const getEmailInputProp = () => {\n    if (!email.length) {\n      return null;\n    }\n\n    if (emailValid) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getEmailFormFeedback = () => {\n    if (!email.length) {\n      return null;\n    }\n\n    if (emailValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Email address looks good!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 14\n      }, this);\n    }\n  }; // password validation\n\n\n  const handlePasswordInput = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    if (passwordRegex.test(newPassword)) {\n      setPasswordValid(true);\n    } else {\n      setPasswordValid(false);\n    }\n  };\n\n  const getPasswordInputProp = () => {\n    if (!password.length) {\n      return null;\n    }\n\n    if (password.length < 6) {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getPasswordFormFeedback = () => {\n    if (!password.length) {\n      return null;\n    }\n\n    if (passwordValid) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Password looks secure!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should be at least 6 characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should have both uppercase and lowercase characters.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Password should have at least one special character.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 14\n      }, this);\n    }\n  }; // confirm password validation\n\n\n  const getConfirmPasswordInputProp = () => {\n    if (!confirmPassword) {\n      return null;\n    }\n\n    if (password === confirmPassword) {\n      return {\n        valid: true\n      };\n    } else {\n      return {\n        invalid: true\n      };\n    }\n  };\n\n  const getConfirmPasswordFeedback = () => {\n    if (!confirmPassword.length) {\n      return null;\n    }\n\n    if (password === confirmPassword) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        valid: true,\n        children: \"Good to go!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (password !== confirmPassword) {\n      return /*#__PURE__*/_jsxDEV(FormFeedback, {\n        invalid: true,\n        children: \"Oops, passwords don't match. Try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      autoplay: true,\n      loop: true,\n      src: \"https://assets4.lottiefiles.com/packages/lf20_2qmtqq0y.json\",\n      style: {\n        height: '300px',\n        width: '300px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Enter a username between 6 and 20 characters\",\n          value: username,\n          onChange: handleUsernameInput,\n          ...getUsernameInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), getUsernameFormFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: handleEmailInput,\n          ...getEmailInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), getEmailFormFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Minimum 6 characters\",\n          value: password,\n          onChange: handlePasswordInput,\n          ...getPasswordInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), getPasswordFormFeedback(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Retype password to confirm\",\n          value: confirmPassword,\n          onChange: e => {\n            setConfirmPassword(e.target.value);\n          },\n          ...getConfirmPasswordInputProp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), getConfirmPasswordFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"success\",\n          disabled: true,\n          children: \"Sign up with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormText, {\n        children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(Button, {\n          color: \"link\",\n          children: \"Login here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: signUp,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n      color: \"secondary\",\n      onClick: toggle,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUpForm, \"MJ3+MPdte4R0JzVU/3/gcJhpSBo=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/SignUpForm.js"],"names":["useState","useHistory","axios","Button","Form","FormGroup","FormText","Input","FormFeedback","List","Player","SignUpForm","setCurrentUser","toggle","history","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","delay","setDelay","usernameValid","setUsernameValid","emailValid","setEmailValid","passwordValid","setPasswordValid","emailRegex","passwordRegex","signUp","method","url","data","then","resp","localStorage","setItem","token","push","catch","error","console","log","response","checkUsername","newUsername","get","valid","handleUsernameInput","e","clearTimeout","target","value","newDelay","setTimeout","getUsernameInputProp","length","invalid","getUsernameFormFeedback","checkEmail","newEmail","test","handleEmailInput","getEmailInputProp","getEmailFormFeedback","handlePasswordInput","newPassword","getPasswordInputProp","getPasswordFormFeedback","getConfirmPasswordInputProp","getConfirmPasswordFeedback","height","width"],"mappings":"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","sourcesContent":["import {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport axios from 'axios'\nimport {Button, Form, FormGroup, FormText, Input, FormFeedback, List} from \"reactstrap\"\nimport {Player} from '@lottiefiles/react-lottie-player'\n\nconst SignUpForm = ({setCurrentUser, toggle}) => {\n\n  const history = useHistory()\n\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n  const [delay, setDelay] = useState(null)\n  const [usernameValid, setUsernameValid] = useState(false)\n  const [emailValid, setEmailValid] = useState(false)\n  const [passwordValid, setPasswordValid] = useState(false)\n\n  const emailRegex = /\\S+@\\S+\\.\\S+/\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/\n\n  const signUp = () => {\n    axios({\n      method: 'POST',\n      url: 'http://localhost:5000/users/',\n      data: {\n        username: username,\n        email: email,\n        password: password\n      }\n    })\n    .then(resp => {\n      // console.log(resp.data)\n      localStorage.setItem('token', resp.data.token)\n      toggle()\n      history.push('/home')\n      setCurrentUser(true)\n    })\n    .catch(error => {\n      console.log(error)\n      console.error(error.response)\n    })\n  }\n\n  // username validation\n\n  const checkUsername = (newUsername) => {\n    axios.get(`http://localhost:5000/users/check_username/${newUsername}`)\n    .then(resp => {\n      // console.log(resp.data)\n      if (resp.data.valid) {\n        setUsernameValid(true)\n      } else {\n        setUsernameValid(false)\n      }\n    })\n    .catch(error => {\n      console.error(error.response)\n    })\n  }\n\n  const handleUsernameInput = e => {\n    clearTimeout(delay)\n    const newUsername = e.target.value\n    setUsername(newUsername)\n    const newDelay = setTimeout(() => {\n      checkUsername(newUsername)\n    }, 400)\n    setDelay(newDelay)\n  }\n\n  const getUsernameInputProp = () => {\n    if (!username.length) {\n      return null\n    }\n    if (usernameValid) {\n      return {valid: true}\n    } else {\n      return {invalid: true}\n    }\n  }\n\n  const getUsernameFormFeedback = () => {\n    if (!username.length) {\n      return null\n    }\n    if (usernameValid) {\n      return <FormFeedback valid>Username is available</FormFeedback>\n    } else {\n      return <FormFeedback invalid>Username already exists, try something else</FormFeedback>\n    }\n  }\n\n  // email validation\n\n  const checkEmail = (newEmail) => {\n    if (emailRegex.test(newEmail)) {\n      axios.get(`http://localhost:5000/users/check_email/${newEmail}`)\n      .then(resp => {\n        // console.log(resp.data)\n        if (resp.data.valid) {\n          setEmailValid(true)\n        } else {\n          setEmailValid(false)\n        }\n      })\n      .catch(error => {\n        console.error(error.response)\n      })\n    }\n  }\n\n  const handleEmailInput = e => {\n    const newEmail = e.target.value\n    setEmail(newEmail)\n    const newDelay = setTimeout(() => {\n      checkEmail(newEmail)\n    }, 400)\n    setDelay(newDelay)\n  }\n\n  const getEmailInputProp = () => {\n    if (!email.length) {\n      return null\n    } if (emailValid) {\n      return {valid: true}\n    } else {\n      return {invalid: true}\n    }\n  }\n\n  const getEmailFormFeedback = () => {\n    if (!email.length) {\n      return null\n    }\n    if (emailValid) {\n      return <FormFeedback valid>Email address looks good!</FormFeedback>\n    } else {\n      return <FormFeedback invalid>Please enter a valid email</FormFeedback>\n    }\n  }\n\n  // password validation\n\n  const handlePasswordInput = e => {\n    const newPassword = e.target.value\n    setPassword(newPassword)\n    if (passwordRegex.test(newPassword)) {\n      setPasswordValid(true)\n    } else {\n      setPasswordValid(false)\n    }\n  }\n\n  const getPasswordInputProp = () => {\n    if(!password.length) {\n      return null\n    }\n    if(password.length < 6) {\n      return {invalid: true}\n    }\n  }\n\n  const getPasswordFormFeedback = () => {\n    if(!password.length) {\n      return null\n    }\n    if (passwordValid) {\n      return <FormFeedback valid>Password looks secure!</FormFeedback>\n    } else {\n      return <FormFeedback invalid>\n        <List>\n          <ul>\n            <li>Password should be at least 6 characters.</li>\n            <li>Password should have both uppercase and lowercase characters.</li>\n            <li>Password should have at least one special character.</li>\n          </ul>\n        </List>\n      </FormFeedback>\n    }\n  }\n\n  // confirm password validation\n\n  const getConfirmPasswordInputProp = () => {\n    if (!confirmPassword) {\n      return null\n    }\n    if (password === confirmPassword) {\n      return {valid: true}\n    } else {\n      return {invalid: true}\n    }\n  }\n\n  const getConfirmPasswordFeedback = () => {\n    if (!confirmPassword.length) {\n      return null\n    }\n    if (password === confirmPassword) {\n      return <FormFeedback valid>Good to go!</FormFeedback>\n    }\n    if (password !== confirmPassword) {\n      return <FormFeedback invalid>Oops, passwords don't match. Try again.</FormFeedback>\n    }\n  }\n\n  return (\n    <div>\n      <h4>Sign Up</h4>\n      <Player autoplay loop src = 'https://assets4.lottiefiles.com/packages/lf20_2qmtqq0y.json' style = {{ height: '300px', width: '300px' }}></Player>\n      <hr/>\n      <Form className=\"form\">\n        <FormGroup>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter a username between 6 and 20 characters\"\n            value={username}\n            onChange={handleUsernameInput}\n            {...getUsernameInputProp()}\n          />\n          {getUsernameFormFeedback()}\n        </FormGroup>\n        <br/>\n        <FormGroup>\n          <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            value = {email}\n            onChange = {handleEmailInput}\n            {...getEmailInputProp()}\n          />\n          {getEmailFormFeedback()}\n        </FormGroup>\n        <br/>\n        <FormGroup>\n          <Input\n            type=\"password\"\n            placeholder=\"Minimum 6 characters\"\n            value = {password}\n            onChange = {handlePasswordInput}\n            {...getPasswordInputProp()}\n          />\n          {getPasswordFormFeedback()}\n          <br/>\n          <Input\n            type=\"password\"\n            placeholder=\"Retype password to confirm\"\n            value = {confirmPassword}\n            onChange = {(e) => {setConfirmPassword(e.target.value)}}\n            {...getConfirmPasswordInputProp()}\n          />\n          {getConfirmPasswordFeedback()}\n        </FormGroup>\n        <hr/>\n        <FormGroup>\n          <Button color=\"success\" disabled>Sign up with Google</Button>\n        </FormGroup>\n        <FormText>\n          Already a member? <Button color=\"link\">Login here.</Button>\n        </FormText>\n      </Form>\n      <Button color=\"primary\" onClick={signUp}>Sign Up</Button>{' '}\n      <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n    </div>\n  )\n}\n\nexport default SignUpForm\n"]},"metadata":{},"sourceType":"module"}