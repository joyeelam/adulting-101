{"ast":null,"code":"var _jsxFileName = \"/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/quiz/Settings.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [options, setOptions] = useState(null);\n  const [questionCategory, setQuestionCategory] = useState(\"\");\n  const [questionDifficulty, setQuestionDifficulty] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n    fetch('https://opentdb.com/api_category.php').then(resp => resp.json()).then(data => {\n      setLoading(false);\n      setOptions(data.trivia_categories);\n    });\n  }, [setOptions]);\n\n  const handleCategoryChange = event => {\n    setQuestionCategory(event.target.value);\n  };\n\n  const handleDifficultyChange = event => {\n    setQuestionDifficulty(event.target.value);\n  };\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionCategory,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), options && options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.id,\n            children: option.name\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Difficulty:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: questionDifficulty,\n          onChange: handleDifficultyChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All\"\n          }, \"difficulty-0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"easy\",\n            children: \"Easy\"\n          }, \"difficulty-1\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"medium\",\n            children: \"Medium\"\n          }, \"difficulty-2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"hard\",\n            children: \"Hard\"\n          }, \"difficulty-3\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(Settings, \"4a6Qh5Wi/HgeDSAyc2vEs8yzOog=\");\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/joyeelam/Desktop/next-academy/react-flask-app/web/src/containers/quiz/Settings.js"],"names":["useEffect","useState","Settings","loading","setLoading","options","setOptions","questionCategory","setQuestionCategory","questionDifficulty","setQuestionDifficulty","fetch","then","resp","json","data","trivia_categories","handleCategoryChange","event","target","value","handleDifficultyChange","map","option","id","name"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACM,gBAAD,EAAmBC,mBAAnB,IAA0CP,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZI,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAO,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACCC,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAECF,IAFD,CAEOG,IAAD,IAAU;AACdX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAACS,IAAI,CAACC,iBAAN,CAAV;AACD,KALD;AAMD,GARQ,EAQN,CAACV,UAAD,CARM,CAAT;;AAUA,QAAMW,oBAAoB,GAAIC,KAAD,IAAW;AACtCV,IAAAA,mBAAmB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AACD,GAFD;;AAIA,QAAMC,sBAAsB,GAAIH,KAAD,IAAW;AACxCR,IAAAA,qBAAqB,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB;AACD,GAFD;;AAIA,MAAI,CAACjB,OAAL,EAAc;AACZ,wBACE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAEI,gBAAf;AAAiC,UAAA,QAAQ,EAAEU,oBAA3C;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGZ,OAAO,IACNA,OAAO,CAACiB,GAAR,CAAaC,MAAD,iBACV;AAAQ,YAAA,KAAK,EAAEA,MAAM,CAACC,EAAtB;AAAA,sBACGD,MAAM,CAACE;AADV,aAA+BF,MAAM,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA,kBADF,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,KAAK,EAAEf,kBAAf;AAAmC,UAAA,QAAQ,EAAEY,sBAA7C;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,EAAd;AAAA;AAAA,aAAqB,cAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA,aAAyB,cAAzB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA,aAA2B,cAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA,aAAyB,cAAzB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,oBADF;AAyBD,GA1BD,MA0BO;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,CAxDD;;GAAMnB,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import {useEffect, useState} from 'react'\n\nconst Settings = () => {\n\n  const [loading, setLoading] = useState(false)\n  const [options, setOptions] = useState(null)\n  const [questionCategory, setQuestionCategory] = useState(\"\")\n  const [questionDifficulty, setQuestionDifficulty] = useState(\"\")\n\n  useEffect(()=>{\n    setLoading(true)\n    fetch('https://opentdb.com/api_category.php')\n    .then((resp) => resp.json())\n    .then((data) => {\n      setLoading(false)\n      setOptions(data.trivia_categories)\n    })\n  }, [setOptions])\n\n  const handleCategoryChange = (event) => {\n    setQuestionCategory(event.target.value)\n  }\n\n  const handleDifficultyChange = (event) => {\n    setQuestionDifficulty(event.target.value)\n  }\n\n  if (!loading) {\n    return (\n      <>\n        <div>\n          <h2>Select Category:</h2>\n          <select value={questionCategory} onChange={handleCategoryChange}>\n            <option>All</option>\n            {options &&\n              options.map((option) => (\n                <option value={option.id} key={option.id}>\n                  {option.name}\n                </option>\n              ))}\n          </select>\n        </div>\n        <div>\n          <h2>Select Difficulty:</h2>\n          <select value={questionDifficulty} onChange={handleDifficultyChange}>\n            <option value=\"\" key=\"difficulty-0\">All</option>\n            <option value=\"easy\" key=\"difficulty-1\">Easy</option>\n            <option value=\"medium\" key=\"difficulty-2\">Medium</option>\n            <option value=\"hard\" key=\"difficulty-3\">Hard</option>\n          </select>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <p>Loading...</p>\n    )\n  }\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}